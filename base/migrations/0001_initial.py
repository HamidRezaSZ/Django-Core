# Generated by Django 4.1.3 on 2023-05-02 05:17

import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='text')),
                ('text_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='text')),
                ('text_fa', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='text')),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='ContactUsDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('image', models.ImageField(upload_to='contact_us', verbose_name='image')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('email_en', models.EmailField(max_length=254, null=True, verbose_name='email')),
                ('email_fa', models.EmailField(max_length=254, null=True, verbose_name='email')),
                ('phone_number', models.CharField(max_length=20, verbose_name='phone_number')),
                ('phone_number_en', models.CharField(max_length=20, null=True, verbose_name='phone_number')),
                ('phone_number_fa', models.CharField(max_length=20, null=True, verbose_name='phone_number')),
            ],
            options={
                'verbose_name': 'Contact Us Detail',
                'verbose_name_plural': 'Contact Us Detail',
            },
        ),
        migrations.CreateModel(
            name='ContactUsForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='full_name')),
                ('cell_phone_number', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Start with 09/9 and it must 9 digits after that. For example: 09120000000 or 9120000000', regex='^(09|9)\\d{9}$')], verbose_name='cell_phone_number')),
                ('message', models.TextField(verbose_name='message')),
            ],
            options={
                'verbose_name': 'Contact Us Form',
                'verbose_name_plural': 'Contact Us Forms',
            },
        ),
        migrations.CreateModel(
            name='DynamicText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('key', models.CharField(max_length=200, unique=True, verbose_name='key')),
                ('value', models.TextField(verbose_name='value')),
                ('value_en', models.TextField(null=True, verbose_name='value')),
                ('value_fa', models.TextField(null=True, verbose_name='value')),
            ],
            options={
                'verbose_name': 'Dynamic Text',
                'verbose_name_plural': 'Dynamic Texts',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('question', models.CharField(max_length=500, verbose_name='question')),
                ('question_en', models.CharField(max_length=500, null=True, verbose_name='question')),
                ('question_fa', models.CharField(max_length=500, null=True, verbose_name='question')),
                ('answer', models.TextField(verbose_name='answer')),
                ('answer_en', models.TextField(null=True, verbose_name='answer')),
                ('answer_fa', models.TextField(null=True, verbose_name='answer')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='title')),
                ('title_fa', models.CharField(max_length=200, null=True, verbose_name='title')),
                ('link', models.CharField(max_length=500, verbose_name='link')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('link', models.CharField(max_length=500, verbose_name='link')),
                ('logo', models.ImageField(upload_to='social_accounts', verbose_name='logo')),
            ],
            options={
                'verbose_name': 'Social Account',
                'verbose_name_plural': 'Social Accounts',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('name_en', models.CharField(max_length=200, null=True, verbose_name='name')),
                ('name_fa', models.CharField(max_length=200, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='text')),
                ('text_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='text')),
                ('text_fa', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='text')),
            ],
            options={
                'verbose_name': 'Terms And Conditions',
                'verbose_name_plural': 'Terms And Conditions',
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='title')),
                ('title_fa', models.CharField(max_length=200, null=True, verbose_name='title')),
                ('text', models.TextField(verbose_name='text')),
                ('text_en', models.TextField(null=True, verbose_name='text')),
                ('text_fa', models.TextField(null=True, verbose_name='text')),
                ('link', models.CharField(blank=True, max_length=500, null=True, verbose_name='link')),
                ('image', models.FileField(upload_to='slider', verbose_name='image')),
                ('order', models.IntegerField(default=1, verbose_name='order')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.page', verbose_name='page')),
            ],
            options={
                'verbose_name': 'Slider',
                'verbose_name_plural': 'Sliders',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('icon', models.FileField(blank=True, null=True, upload_to='menus', verbose_name='icon')),
                ('order', models.IntegerField(default=1, verbose_name='order')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.page', verbose_name='page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='base.menu', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Menu',
                'verbose_name_plural': 'Menus',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('logo', models.FileField(upload_to='footer', verbose_name='logo')),
                ('content', models.TextField(verbose_name='content')),
                ('content_en', models.TextField(null=True, verbose_name='content')),
                ('content_fa', models.TextField(null=True, verbose_name='content')),
                ('contact_us', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.contactusdetail', verbose_name='contact_us')),
                ('social_accounts', models.ManyToManyField(to='base.socialaccount', verbose_name='social_accounts')),
                ('useful_link', models.ManyToManyField(to='base.page', verbose_name='useful_link')),
            ],
            options={
                'verbose_name': 'Footer',
                'verbose_name_plural': 'Footers',
            },
        ),
        migrations.AddField(
            model_name='contactusdetail',
            name='social_accounts',
            field=models.ManyToManyField(to='base.socialaccount', verbose_name='social_accounts'),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('name_en', models.CharField(max_length=256, null=True, verbose_name='name')),
                ('name_fa', models.CharField(max_length=256, null=True, verbose_name='name')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.state', verbose_name='state')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
    ]
